heat_template_version: 2014-10-16

description: Template to create service chain (SFC) demo with 3 VNFs using Netfloc
parameters:
  image_vTC-f:
    type: string
    label: Image for the vTC-f (virtual traffic classifier - forwarding) VNF
    description: Image to use for the vTC forwarder VNF
    default: vTC-f-7.6.2016

  image_vTC:
    type: string
    label: Image for the vTC (virtual traffic classifier) VNF
    description: Image to use for the vTC VNF
    default: vTC-7.6.2016

  image_vMT:
    type: string
    label: Image for the vMT (virtual media transcoder) VNF
    description: Image to use for the vMT VNF
    default: vMT-7.6.2016

  image_vSF:
    type: string
    label: Image for the vSF (virtual service forwarder) VNF
    description: Image to use for the vSF VNF
    default: vSF-7.6.2016

  sshkey:
    type: string
    label: VMs ssh key
    description: The ssh key for the VMs
    default: cloudkey

  public_network:
    type: string
    label: Public network
    description: ID of public network
    default: e4d260ce-7555-47e1-8eb0-23369ce88de9

  flavor:
    type: string
    label: VMs flavor
    description: Must be a valid OpenStack flavor
    default: m1.medium
    constraints:
      - allowed_values:
        - vTC
        - m1.medium

  odl_username:
    type: string
    label: ODL User Name
    default: admin
    description: User name for Open Daylight (ODL) Restconf access

  odl_password:
    type: string
    label: ODL Password
    default: admin
    description: Password for ODL Restconf access

  netfloc_ip_port:
    type: string
    label: Netfloc IP and port number
    default: "10.30.0.61:8181"
    description: IP and port of the Netfloc node

resources:
  vnf_vTC_f_in_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: vnf_in_network
      fixed_ips:
        - subnet_id:
            get_resource: vnf_in_subnet

  vnf_vTC_f_out_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: vnf_out1_network
      fixed_ips:
        - subnet_id:
            get_resource: vnf_out1_subnet

  vnf_vTC_in_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: vnf_in_network
      fixed_ips:
        - subnet_id:
            get_resource: vnf_in_subnet

  vnf_vTC_out1_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: vnf_out1_network
      fixed_ips:
        - subnet_id:
            get_resource: vnf_out1_subnet

  vnf_vTC_out2_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: vnf_out2_network
      fixed_ips:
        - subnet_id:
            get_resource: vnf_out2_subnet

  vnf_vMT_in_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: vnf_in_network
      fixed_ips:
        - subnet_id:
            get_resource: vnf_in_subnet

  vnf_vMT_out_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: vnf_out1_network
      fixed_ips:
        - subnet_id:
            get_resource: vnf_out1_subnet

  vnf_vSF_in_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: vnf_in_network
      fixed_ips:
        - subnet_id:
            get_resource: vnf_in_subnet

  vnf_vSF_out_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: vnf_out1_network
      fixed_ips:
        - subnet_id:
            get_resource: vnf_out1_subnet

  vnf_vTC_f_floating_ip_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: private_network
      fixed_ips:
        - subnet_id:
            get_resource: private_subnet

  vnf_vTC_f_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id:
        get_param: public_network
      port_id:
        get_resource: vnf_vTC_f_floating_ip_port

  vnf_vTC_floating_ip_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: private_network
      fixed_ips:
        - subnet_id:
            get_resource: private_subnet

  vnf_vTC_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id:
        get_param: public_network
      port_id:
        get_resource: vnf_vTC_floating_ip_port

  vnf_vMT_floating_ip_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: private_network
      fixed_ips:
        - subnet_id:
            get_resource: private_subnet

  vnf_vMT_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id:
        get_param: public_network
      port_id:
        get_resource: vnf_vMT_floating_ip_port

  vnf_vSF_floating_ip_port:
    type: OS::Neutron::Port
    properties:
      network_id:
        get_resource: private_network
      fixed_ips:
        - subnet_id:
            get_resource: private_subnet

  vnf_vSF_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id:
        get_param: public_network
      port_id:
        get_resource: vnf_vSF_floating_ip_port

  vnf_vTC_f:
    type: OS::Nova::Server
    properties:
      name: vTC-f
      key_name: { get_param: sshkey }
      image:
        get_param: image_vTC-f
      flavor: vTC
      availability_zone: nova:node2
      networks:
        - port:
            get_resource: vnf_vTC_f_floating_ip_port
        - port:
            get_resource: vnf_vTC_f_in_port
        - port:
            get_resource: vnf_vTC_f_out_port

  vnf_vTC:
    type: OS::Nova::Server
    properties:
      name: vTC
      key_name: { get_param: sshkey }
      image:
        get_param: image_vTC
      flavor: vTC
      availability_zone: nova:node2
      networks:
        - port:
            get_resource: vnf_vTC_floating_ip_port
        - port:
            get_resource: vnf_vTC_in_port
        - port:
            get_resource: vnf_vTC_out1_port
        - port:
            get_resource: vnf_vTC_out2_port


  vnf_vMT:
    type: OS::Nova::Server
    properties:
      name: vMT
      key_name: { get_param: sshkey }
      image:
        get_param: image_vMT
      flavor:
        get_param: flavor
      availability_zone: nova:control
      networks:
        - port:
            get_resource: vnf_vMT_floating_ip_port
        - port:
            get_resource: vnf_vMT_in_port
        - port:
            get_resource: vnf_vMT_out_port

  vnf_vSF:
    type: OS::Nova::Server
    properties:
      name: vSF
      key_name: { get_param: sshkey }
      image:
        get_param: image_vSF
      flavor:
        get_param: flavor
      availability_zone: nova:control
      networks:
        - port:
            get_resource: vnf_vSF_floating_ip_port
        - port:
            get_resource: vnf_vSF_in_port
        - port:
            get_resource: vnf_vSF_out_port

  private_network:
    type: OS::Neutron::Net
    properties:
      name: private_network

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: private_subnet
      network_id:
        get_resource: private_network
      cidr: 13.13.13.0/24
      gateway_ip: 13.13.13.1

  vnf_in_network:
    type: OS::Neutron::Net
    properties:
      name: vnf_in_network

  vnf_in_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: vnf_in_subnet
      network_id:
        get_resource: vnf_in_network
      cidr: 192.168.1.0/24
      gateway_ip: 192.168.1.1

  vnf_out1_network:
    type: OS::Neutron::Net
    properties:
      name: vnf_out1_network

  vnf_out1_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: vnf_out1_subnet
      network_id:
        get_resource: vnf_out1_network
      cidr: 192.168.2.0/24
      gateway_ip: 192.168.2.1

  vnf_out2_network:
    type: OS::Neutron::Net
    properties:
      name: vnf_out2_network

  vnf_out2_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: vnf_out2_subnet
      network_id:
        get_resource: vnf_out2_network
      cidr: 192.168.3.0/24
      gateway_ip: 192.168.3.1

  router:
    type: OS::Neutron::Router
    properties:
      name: Router1
      external_gateway_info:
        network:
          get_param: public_network

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id:
        get_resource: router
      subnet:
        get_resource: private_subnet

  chain1_create:
    type: Netfloc::Chain::Create
    depends_on: [ vnf_vTC, vnf_vTC_f, vnf_vSF, vnf_vTC_out1_port, vnf_vTC_f_in_port, vnf_vTC_f_out_port, vnf_vSF_in_port ]
    properties:
      port1:
        get_resource: vnf_vTC_out1_port
      port2:
        get_resource: vnf_vTC_f_in_port
      port3:
        get_resource: vnf_vTC_f_out_port
      port4:
        get_resource: vnf_vSF_in_port
      odl_username : { get_param: odl_username }
      odl_password: { get_param: odl_password }
      netfloc_ip_port: { get_param: netfloc_ip_port }

  chain2_create:
    type: Netfloc::Chain::Create
    depends_on: [ vnf_vTC, vnf_vMT, vnf_vSF, vnf_vTC_out2_port, vnf_vMT_in_port, vnf_vMT_out_port, vnf_vSF_in_port ]
    properties:
      port1:
        get_resource: vnf_vTC_out2_port
      port2:
        get_resource: vnf_vMT_in_port
      port3:
        get_resource: vnf_vMT_out_port
      port4:
        get_resource: vnf_vSF_in_port
      odl_username : { get_param: odl_username }
      odl_password: { get_param: odl_password }
      netfloc_ip_port: { get_param: netfloc_ip_port }

outputs:
  vnf_vTC_out1_port:
    description: Chain1 - SFC port1
    value:
      get_resource: vnf_vTC_out1_port
  vnf_vTC_f_in_port:
    description: Chain1 - SFC port2
    value:
      get_resource: vnf_vTC_f_in_port
  vnf_vTC_f_out_port:
    description: Chain1 - SFC port3
    value:
      get_resource: vnf_vTC_f_out_port
  vnf_vTC_out2_port:
    description: Chain2 - SFC port1
    value:
      get_resource: vnf_vTC_out2_port
  vnf_vMT_in_port:
    description: Chain2 - SFC port2
    value:
      get_resource: vnf_vMT_in_port
  vnf_vMT_out_port:
    description: Chain2 - SFC port3
    value:
      get_resource: vnf_vMT_out_port
  vnf_vSF_in_port:
    description: Chain1_Chain2 - SFC port4
    value:
      get_resource: vnf_vSF_in_port
  chain1_id:
    description: Id of the created chain
    value:
      get_resource: chain1_create
  chain2_id:
    description: Id of the created chain
    value:
      get_resource: chain2_create